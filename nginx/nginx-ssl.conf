# OpenClip Pro Nginx SSL Configuration
# Production-grade SSL/TLS configuration with security best practices

# Global SSL settings
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

# SSL session settings
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

# OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /etc/ssl/certs/openclip/chain.pem;

# Security headers
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# Redirect all HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name openclip.pro www.openclip.pro api.openclip.pro;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main application server (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name openclip.pro www.openclip.pro;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/openclip/openclip.pro.crt;
    ssl_certificate_key /etc/ssl/certs/openclip/openclip.pro.key;
    
    # Enable HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.openclip.pro wss://api.openclip.pro https://*.amazonaws.com; media-src 'self' blob: https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn addr 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html;
    
    # Frontend routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Service worker
    location /sw.js {
        add_header Cache-Control "no-cache";
        add_header Service-Worker-Allowed "/";
    }
    
    # Monitoring endpoint (internal only)
    location /nginx-status {
        stub_status on;
        allow 10.0.0.0/8;
        deny all;
    }
}

# API server (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.openclip.pro;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/openclip/api.openclip.pro.crt;
    ssl_certificate_key /etc/ssl/certs/openclip/api.openclip.pro.key;
    
    # Client certificate authentication (optional)
    # ssl_client_certificate /etc/ssl/certs/openclip/ca.crt;
    # ssl_verify_client optional;
    
    # Rate limiting for API
    limit_req zone=api burst=50 nodelay;
    limit_conn addr 20;
    
    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;
    
    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # API endpoints
    location / {
        # CORS headers
        add_header Access-Control-Allow-Origin "https://openclip.pro" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Request-ID" always;
        add_header Access-Control-Max-Age "3600" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        proxy_pass http://backend:8000;
    }
    
    # Authentication endpoints (stricter rate limiting)
    location ~ ^/(auth|login|register|password-reset) {
        limit_req zone=auth burst=10 nodelay;
        
        proxy_pass http://backend:8000;
    }
    
    # Upload endpoints
    location /api/v1/upload {
        limit_req zone=upload burst=5 nodelay;
        client_max_body_size 5G;
        client_body_timeout 3600s;
        
        # Upload progress
        upload_progress_json_output;
        track_uploads uploads 30s;
        
        proxy_pass http://backend:8000;
    }
    
    # WebSocket endpoint
    location /ws {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://backend:8000/health;
    }
}

# CDN server (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.openclip.pro;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/openclip/cdn.openclip.pro.crt;
    ssl_certificate_key /etc/ssl/certs/openclip/cdn.openclip.pro.key;
    
    # CDN specific headers
    add_header Cache-Control "public, max-age=31536000, immutable";
    add_header X-Content-Type-Options "nosniff" always;
    
    # CORS for CDN
    add_header Access-Control-Allow-Origin "*" always;
    
    # Serve static files from S3/GCS
    location / {
        proxy_pass https://openclip-cdn.s3.amazonaws.com;
        proxy_set_header Host openclip-cdn.s3.amazonaws.com;
        proxy_ssl_server_name on;
        
        # Cache settings
        proxy_cache cdn_cache;
        proxy_cache_valid 200 365d;
        proxy_cache_valid 404 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status;
    }
}

# Cache configuration
proxy_cache_path /var/cache/nginx/cdn levels=1:2 keys_zone=cdn_cache:100m max_size=10g inactive=365d use_temp_path=off;

# Monitoring server (internal)
server {
    listen 8080;
    server_name _;
    
    location /metrics {
        stub_status on;
        access_log off;
        allow 10.0.0.0/8;
        deny all;
    }
}

# Include additional configurations
include /etc/nginx/conf.d/*.conf;